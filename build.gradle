plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
	id 'java'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	mavenCentral()

	maven {
		url = uri('https://repo.opencollab.dev/maven-releases/')
	}

	maven {
		url = uri('https://repo.opencollab.dev/maven-snapshots/')
	}

	maven {
		url = uri('https://jitpack.io')
	}

	maven {
		url = uri('https://oss.sonatype.org/content/repositories/snapshots/')
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation 'org.geysermc:core:2.0.0-SNAPSHOT'

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
	shadow 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.0'
	shadow "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.0"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

shadowJar {
	configurations = [project.configurations.shadow]
}

jar {
	from "LICENSE"
}

remapJar {
	dependsOn(shadowJar)
	input.set shadowJar.archiveFile.get()
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		//mavenLocal()
	}
}